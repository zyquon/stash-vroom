# Generated by ariadne-codegen
# Source: http://localhost:9999/graphql

from typing import Any, List, Optional

from .base_model import BaseModel, Upload
from .enums import (
    BlobsStorageType,
    BulkUpdateIdMode,
    CircumisedEnum,
    CriterionModifier,
    FilterMode,
    GenderEnum,
    HashAlgorithm,
    IdentifyFieldStrategy,
    ImageLightboxDisplayMode,
    ImageLightboxScrollMode,
    ImportDuplicateEnum,
    ImportMissingRefEnum,
    OrientationEnum,
    PreviewPreset,
    ResolutionEnum,
    SortDirectionEnum,
    StreamingResolutionEnum,
)


class AddTempDLNAIPInput(BaseModel):
    address: str
    duration: Optional[int] = None


class AnonymiseDatabaseInput(BaseModel):
    download: Optional[bool] = None


class AssignSceneFileInput(BaseModel):
    scene_id: str
    file_id: str


class AutoTagMetadataInput(BaseModel):
    paths: Optional[List[str]] = None
    performers: Optional[List[str]] = None
    studios: Optional[List[str]] = None
    tags: Optional[List[str]] = None


class BackupDatabaseInput(BaseModel):
    download: Optional[bool] = None


class BulkGalleryUpdateInput(BaseModel):
    clientMutationId: Optional[str] = None
    ids: Optional[List[str]] = None
    code: Optional[str] = None
    url: Optional[str] = None
    urls: Optional["BulkUpdateStrings"] = None
    date: Optional[str] = None
    details: Optional[str] = None
    photographer: Optional[str] = None
    rating100: Optional[int] = None
    organized: Optional[bool] = None
    scene_ids: Optional["BulkUpdateIds"] = None
    studio_id: Optional[str] = None
    tag_ids: Optional["BulkUpdateIds"] = None
    performer_ids: Optional["BulkUpdateIds"] = None


class BulkGroupUpdateInput(BaseModel):
    clientMutationId: Optional[str] = None
    ids: Optional[List[str]] = None
    rating100: Optional[int] = None
    studio_id: Optional[str] = None
    director: Optional[str] = None
    urls: Optional["BulkUpdateStrings"] = None
    tag_ids: Optional["BulkUpdateIds"] = None
    containing_groups: Optional["BulkUpdateGroupDescriptionsInput"] = None
    sub_groups: Optional["BulkUpdateGroupDescriptionsInput"] = None


class BulkImageUpdateInput(BaseModel):
    clientMutationId: Optional[str] = None
    ids: Optional[List[str]] = None
    title: Optional[str] = None
    code: Optional[str] = None
    rating100: Optional[int] = None
    organized: Optional[bool] = None
    url: Optional[str] = None
    urls: Optional["BulkUpdateStrings"] = None
    date: Optional[str] = None
    details: Optional[str] = None
    photographer: Optional[str] = None
    studio_id: Optional[str] = None
    performer_ids: Optional["BulkUpdateIds"] = None
    tag_ids: Optional["BulkUpdateIds"] = None
    gallery_ids: Optional["BulkUpdateIds"] = None


class BulkMovieUpdateInput(BaseModel):
    clientMutationId: Optional[str] = None
    ids: Optional[List[str]] = None
    rating100: Optional[int] = None
    studio_id: Optional[str] = None
    director: Optional[str] = None
    urls: Optional["BulkUpdateStrings"] = None
    tag_ids: Optional["BulkUpdateIds"] = None


class BulkPerformerUpdateInput(BaseModel):
    clientMutationId: Optional[str] = None
    ids: Optional[List[str]] = None
    disambiguation: Optional[str] = None
    url: Optional[str] = None
    urls: Optional["BulkUpdateStrings"] = None
    gender: Optional[GenderEnum] = None
    birthdate: Optional[str] = None
    ethnicity: Optional[str] = None
    country: Optional[str] = None
    eye_color: Optional[str] = None
    height_cm: Optional[int] = None
    measurements: Optional[str] = None
    fake_tits: Optional[str] = None
    penis_length: Optional[float] = None
    circumcised: Optional[CircumisedEnum] = None
    career_length: Optional[str] = None
    tattoos: Optional[str] = None
    piercings: Optional[str] = None
    alias_list: Optional["BulkUpdateStrings"] = None
    twitter: Optional[str] = None
    instagram: Optional[str] = None
    favorite: Optional[bool] = None
    tag_ids: Optional["BulkUpdateIds"] = None
    rating100: Optional[int] = None
    details: Optional[str] = None
    death_date: Optional[str] = None
    hair_color: Optional[str] = None
    weight: Optional[int] = None
    ignore_auto_tag: Optional[bool] = None
    custom_fields: Optional["CustomFieldsInput"] = None


class BulkSceneUpdateInput(BaseModel):
    clientMutationId: Optional[str] = None
    ids: Optional[List[str]] = None
    title: Optional[str] = None
    code: Optional[str] = None
    details: Optional[str] = None
    director: Optional[str] = None
    url: Optional[str] = None
    urls: Optional["BulkUpdateStrings"] = None
    date: Optional[str] = None
    rating100: Optional[int] = None
    organized: Optional[bool] = None
    studio_id: Optional[str] = None
    gallery_ids: Optional["BulkUpdateIds"] = None
    performer_ids: Optional["BulkUpdateIds"] = None
    tag_ids: Optional["BulkUpdateIds"] = None
    group_ids: Optional["BulkUpdateIds"] = None
    movie_ids: Optional["BulkUpdateIds"] = None


class BulkTagUpdateInput(BaseModel):
    ids: Optional[List[str]] = None
    description: Optional[str] = None
    aliases: Optional["BulkUpdateStrings"] = None
    ignore_auto_tag: Optional[bool] = None
    favorite: Optional[bool] = None
    parent_ids: Optional["BulkUpdateIds"] = None
    child_ids: Optional["BulkUpdateIds"] = None


class BulkUpdateGroupDescriptionsInput(BaseModel):
    groups: List["GroupDescriptionInput"]
    mode: BulkUpdateIdMode


class BulkUpdateIds(BaseModel):
    ids: Optional[List[str]] = None
    mode: BulkUpdateIdMode


class BulkUpdateStrings(BaseModel):
    values: Optional[List[str]] = None
    mode: BulkUpdateIdMode


class CircumcisionCriterionInput(BaseModel):
    value: Optional[List[CircumisedEnum]] = None
    modifier: CriterionModifier


class CleanGeneratedInput(BaseModel):
    blobFiles: Optional[bool] = None
    sprites: Optional[bool] = None
    screenshots: Optional[bool] = None
    transcodes: Optional[bool] = None
    markers: Optional[bool] = None
    imageThumbnails: Optional[bool] = None
    dryRun: Optional[bool] = None


class CleanMetadataInput(BaseModel):
    paths: Optional[List[str]] = None
    dryRun: bool


class ConfigDLNAInput(BaseModel):
    serverName: Optional[str] = None
    enabled: Optional[bool] = None
    port: Optional[int] = None
    whitelistedIPs: Optional[List[str]] = None
    interfaces: Optional[List[str]] = None
    videoSortOrder: Optional[str] = None


class ConfigDefaultSettingsInput(BaseModel):
    scan: Optional["ScanMetadataInput"] = None
    identify: Optional["IdentifyMetadataInput"] = None
    autoTag: Optional["AutoTagMetadataInput"] = None
    generate: Optional["GenerateMetadataInput"] = None
    deleteFile: Optional[bool] = None
    deleteGenerated: Optional[bool] = None


class ConfigDisableDropdownCreateInput(BaseModel):
    performer: Optional[bool] = None
    tag: Optional[bool] = None
    studio: Optional[bool] = None
    movie: Optional[bool] = None


class ConfigGeneralInput(BaseModel):
    stashes: Optional[List["StashConfigInput"]] = None
    databasePath: Optional[str] = None
    backupDirectoryPath: Optional[str] = None
    generatedPath: Optional[str] = None
    metadataPath: Optional[str] = None
    scrapersPath: Optional[str] = None
    pluginsPath: Optional[str] = None
    cachePath: Optional[str] = None
    blobsPath: Optional[str] = None
    blobsStorage: Optional[BlobsStorageType] = None
    ffmpegPath: Optional[str] = None
    ffprobePath: Optional[str] = None
    calculateMD5: Optional[bool] = None
    videoFileNamingAlgorithm: Optional[HashAlgorithm] = None
    parallelTasks: Optional[int] = None
    previewAudio: Optional[bool] = None
    previewSegments: Optional[int] = None
    previewSegmentDuration: Optional[float] = None
    previewExcludeStart: Optional[str] = None
    previewExcludeEnd: Optional[str] = None
    previewPreset: Optional[PreviewPreset] = None
    transcodeHardwareAcceleration: Optional[bool] = None
    maxTranscodeSize: Optional[StreamingResolutionEnum] = None
    maxStreamingTranscodeSize: Optional[StreamingResolutionEnum] = None
    transcodeInputArgs: Optional[List[str]] = None
    transcodeOutputArgs: Optional[List[str]] = None
    liveTranscodeInputArgs: Optional[List[str]] = None
    liveTranscodeOutputArgs: Optional[List[str]] = None
    drawFunscriptHeatmapRange: Optional[bool] = None
    writeImageThumbnails: Optional[bool] = None
    createImageClipsFromVideos: Optional[bool] = None
    username: Optional[str] = None
    password: Optional[str] = None
    maxSessionAge: Optional[int] = None
    logFile: Optional[str] = None
    logOut: Optional[bool] = None
    logLevel: Optional[str] = None
    logAccess: Optional[bool] = None
    createGalleriesFromFolders: Optional[bool] = None
    galleryCoverRegex: Optional[str] = None
    videoExtensions: Optional[List[str]] = None
    imageExtensions: Optional[List[str]] = None
    galleryExtensions: Optional[List[str]] = None
    excludes: Optional[List[str]] = None
    imageExcludes: Optional[List[str]] = None
    customPerformerImageLocation: Optional[str] = None
    stashBoxes: Optional[List["StashBoxInput"]] = None
    pythonPath: Optional[str] = None
    scraperPackageSources: Optional[List["PackageSourceInput"]] = None
    pluginPackageSources: Optional[List["PackageSourceInput"]] = None


class ConfigImageLightboxInput(BaseModel):
    slideshowDelay: Optional[int] = None
    displayMode: Optional[ImageLightboxDisplayMode] = None
    scaleUp: Optional[bool] = None
    resetZoomOnNav: Optional[bool] = None
    scrollMode: Optional[ImageLightboxScrollMode] = None
    scrollAttemptsBeforeChange: Optional[int] = None


class ConfigInterfaceInput(BaseModel):
    menuItems: Optional[List[str]] = None
    soundOnPreview: Optional[bool] = None
    wallShowTitle: Optional[bool] = None
    wallPlayback: Optional[str] = None
    showScrubber: Optional[bool] = None
    maximumLoopDuration: Optional[int] = None
    autostartVideo: Optional[bool] = None
    autostartVideoOnPlaySelected: Optional[bool] = None
    continuePlaylistDefault: Optional[bool] = None
    showStudioAsText: Optional[bool] = None
    css: Optional[str] = None
    cssEnabled: Optional[bool] = None
    javascript: Optional[str] = None
    javascriptEnabled: Optional[bool] = None
    customLocales: Optional[str] = None
    customLocalesEnabled: Optional[bool] = None
    language: Optional[str] = None
    imageLightbox: Optional["ConfigImageLightboxInput"] = None
    disableDropdownCreate: Optional["ConfigDisableDropdownCreateInput"] = None
    handyKey: Optional[str] = None
    funscriptOffset: Optional[int] = None
    useStashHostedFunscript: Optional[bool] = None
    noBrowser: Optional[bool] = None
    notificationsEnabled: Optional[bool] = None


class ConfigScrapingInput(BaseModel):
    scraperUserAgent: Optional[str] = None
    scraperCDPPath: Optional[str] = None
    scraperCertCheck: Optional[bool] = None
    excludeTagPatterns: Optional[List[str]] = None


class CustomFieldCriterionInput(BaseModel):
    field: str
    value: Optional[List[Any]] = None
    modifier: CriterionModifier


class CustomFieldsInput(BaseModel):
    full: Optional[Any] = None
    partial: Optional[Any] = None


class DateCriterionInput(BaseModel):
    value: str
    value2: Optional[str] = None
    modifier: CriterionModifier


class DestroyFilterInput(BaseModel):
    id: str


class DisableDLNAInput(BaseModel):
    duration: Optional[int] = None


class EnableDLNAInput(BaseModel):
    duration: Optional[int] = None


class ExportObjectTypeInput(BaseModel):
    ids: Optional[List[str]] = None
    all: Optional[bool] = None


class ExportObjectsInput(BaseModel):
    scenes: Optional["ExportObjectTypeInput"] = None
    images: Optional["ExportObjectTypeInput"] = None
    studios: Optional["ExportObjectTypeInput"] = None
    performers: Optional["ExportObjectTypeInput"] = None
    tags: Optional["ExportObjectTypeInput"] = None
    groups: Optional["ExportObjectTypeInput"] = None
    movies: Optional["ExportObjectTypeInput"] = None
    galleries: Optional["ExportObjectTypeInput"] = None
    includeDependencies: Optional[bool] = None


class FileSetFingerprintsInput(BaseModel):
    id: str
    fingerprints: List["SetFingerprintsInput"]


class FindFilterType(BaseModel):
    q: Optional[str] = None
    page: Optional[int] = None
    per_page: Optional[int] = None
    sort: Optional[str] = None
    direction: Optional[SortDirectionEnum] = None


class FindJobInput(BaseModel):
    id: str


class FloatCriterionInput(BaseModel):
    value: float
    value2: Optional[float] = None
    modifier: CriterionModifier


class GalleryAddInput(BaseModel):
    gallery_id: str
    image_ids: List[str]


class GalleryChapterCreateInput(BaseModel):
    gallery_id: str
    title: str
    image_index: int


class GalleryChapterUpdateInput(BaseModel):
    id: str
    gallery_id: Optional[str] = None
    title: Optional[str] = None
    image_index: Optional[int] = None


class GalleryCreateInput(BaseModel):
    title: str
    code: Optional[str] = None
    url: Optional[str] = None
    urls: Optional[List[str]] = None
    date: Optional[str] = None
    details: Optional[str] = None
    photographer: Optional[str] = None
    rating100: Optional[int] = None
    organized: Optional[bool] = None
    scene_ids: Optional[List[str]] = None
    studio_id: Optional[str] = None
    tag_ids: Optional[List[str]] = None
    performer_ids: Optional[List[str]] = None


class GalleryDestroyInput(BaseModel):
    ids: List[str]
    delete_file: Optional[bool] = None
    delete_generated: Optional[bool] = None


class GalleryFilterType(BaseModel):
    AND: Optional["GalleryFilterType"] = None
    OR: Optional["GalleryFilterType"] = None
    NOT: Optional["GalleryFilterType"] = None
    id: Optional["IntCriterionInput"] = None
    title: Optional["StringCriterionInput"] = None
    details: Optional["StringCriterionInput"] = None
    checksum: Optional["StringCriterionInput"] = None
    path: Optional["StringCriterionInput"] = None
    file_count: Optional["IntCriterionInput"] = None
    is_missing: Optional[str] = None
    is_zip: Optional[bool] = None
    rating100: Optional["IntCriterionInput"] = None
    organized: Optional[bool] = None
    average_resolution: Optional["ResolutionCriterionInput"] = None
    has_chapters: Optional[str] = None
    scenes: Optional["MultiCriterionInput"] = None
    studios: Optional["HierarchicalMultiCriterionInput"] = None
    tags: Optional["HierarchicalMultiCriterionInput"] = None
    tag_count: Optional["IntCriterionInput"] = None
    performer_tags: Optional["HierarchicalMultiCriterionInput"] = None
    performers: Optional["MultiCriterionInput"] = None
    performer_count: Optional["IntCriterionInput"] = None
    performer_favorite: Optional[bool] = None
    performer_age: Optional["IntCriterionInput"] = None
    image_count: Optional["IntCriterionInput"] = None
    url: Optional["StringCriterionInput"] = None
    date: Optional["DateCriterionInput"] = None
    created_at: Optional["TimestampCriterionInput"] = None
    updated_at: Optional["TimestampCriterionInput"] = None
    code: Optional["StringCriterionInput"] = None
    photographer: Optional["StringCriterionInput"] = None
    scenes_filter: Optional["SceneFilterType"] = None
    images_filter: Optional["ImageFilterType"] = None
    performers_filter: Optional["PerformerFilterType"] = None
    studios_filter: Optional["StudioFilterType"] = None
    tags_filter: Optional["TagFilterType"] = None


class GalleryRemoveInput(BaseModel):
    gallery_id: str
    image_ids: List[str]


class GalleryResetCoverInput(BaseModel):
    gallery_id: str


class GallerySetCoverInput(BaseModel):
    gallery_id: str
    cover_image_id: str


class GalleryUpdateInput(BaseModel):
    clientMutationId: Optional[str] = None
    id: str
    title: Optional[str] = None
    code: Optional[str] = None
    url: Optional[str] = None
    urls: Optional[List[str]] = None
    date: Optional[str] = None
    details: Optional[str] = None
    photographer: Optional[str] = None
    rating100: Optional[int] = None
    organized: Optional[bool] = None
    scene_ids: Optional[List[str]] = None
    studio_id: Optional[str] = None
    tag_ids: Optional[List[str]] = None
    performer_ids: Optional[List[str]] = None
    primary_file_id: Optional[str] = None


class GenderCriterionInput(BaseModel):
    value: Optional[GenderEnum] = None
    value_list: Optional[List[GenderEnum]] = None
    modifier: CriterionModifier


class GenerateAPIKeyInput(BaseModel):
    clear: Optional[bool] = None


class GenerateMetadataInput(BaseModel):
    covers: Optional[bool] = None
    sprites: Optional[bool] = None
    previews: Optional[bool] = None
    imagePreviews: Optional[bool] = None
    previewOptions: Optional["GeneratePreviewOptionsInput"] = None
    markers: Optional[bool] = None
    markerImagePreviews: Optional[bool] = None
    markerScreenshots: Optional[bool] = None
    transcodes: Optional[bool] = None
    forceTranscodes: Optional[bool] = None
    phashes: Optional[bool] = None
    interactiveHeatmapsSpeeds: Optional[bool] = None
    imageThumbnails: Optional[bool] = None
    clipPreviews: Optional[bool] = None
    sceneIDs: Optional[List[str]] = None
    markerIDs: Optional[List[str]] = None
    overwrite: Optional[bool] = None


class GeneratePreviewOptionsInput(BaseModel):
    previewSegments: Optional[int] = None
    previewSegmentDuration: Optional[float] = None
    previewExcludeStart: Optional[str] = None
    previewExcludeEnd: Optional[str] = None
    previewPreset: Optional[PreviewPreset] = None


class GroupCreateInput(BaseModel):
    name: str
    aliases: Optional[str] = None
    duration: Optional[int] = None
    date: Optional[str] = None
    rating100: Optional[int] = None
    studio_id: Optional[str] = None
    director: Optional[str] = None
    synopsis: Optional[str] = None
    urls: Optional[List[str]] = None
    tag_ids: Optional[List[str]] = None
    containing_groups: Optional[List["GroupDescriptionInput"]] = None
    sub_groups: Optional[List["GroupDescriptionInput"]] = None
    front_image: Optional[str] = None
    back_image: Optional[str] = None


class GroupDescriptionInput(BaseModel):
    group_id: str
    description: Optional[str] = None


class GroupDestroyInput(BaseModel):
    id: str


class GroupFilterType(BaseModel):
    AND: Optional["GroupFilterType"] = None
    OR: Optional["GroupFilterType"] = None
    NOT: Optional["GroupFilterType"] = None
    name: Optional["StringCriterionInput"] = None
    director: Optional["StringCriterionInput"] = None
    synopsis: Optional["StringCriterionInput"] = None
    duration: Optional["IntCriterionInput"] = None
    rating100: Optional["IntCriterionInput"] = None
    studios: Optional["HierarchicalMultiCriterionInput"] = None
    is_missing: Optional[str] = None
    url: Optional["StringCriterionInput"] = None
    performers: Optional["MultiCriterionInput"] = None
    tags: Optional["HierarchicalMultiCriterionInput"] = None
    tag_count: Optional["IntCriterionInput"] = None
    date: Optional["DateCriterionInput"] = None
    created_at: Optional["TimestampCriterionInput"] = None
    updated_at: Optional["TimestampCriterionInput"] = None
    containing_groups: Optional["HierarchicalMultiCriterionInput"] = None
    sub_groups: Optional["HierarchicalMultiCriterionInput"] = None
    containing_group_count: Optional["IntCriterionInput"] = None
    sub_group_count: Optional["IntCriterionInput"] = None
    scenes_filter: Optional["SceneFilterType"] = None
    studios_filter: Optional["StudioFilterType"] = None


class GroupSubGroupAddInput(BaseModel):
    containing_group_id: str
    sub_groups: List["GroupDescriptionInput"]
    insert_index: Optional[int] = None


class GroupSubGroupRemoveInput(BaseModel):
    containing_group_id: str
    sub_group_ids: List[str]


class GroupUpdateInput(BaseModel):
    id: str
    name: Optional[str] = None
    aliases: Optional[str] = None
    duration: Optional[int] = None
    date: Optional[str] = None
    rating100: Optional[int] = None
    studio_id: Optional[str] = None
    director: Optional[str] = None
    synopsis: Optional[str] = None
    urls: Optional[List[str]] = None
    tag_ids: Optional[List[str]] = None
    containing_groups: Optional[List["GroupDescriptionInput"]] = None
    sub_groups: Optional[List["GroupDescriptionInput"]] = None
    front_image: Optional[str] = None
    back_image: Optional[str] = None


class HierarchicalMultiCriterionInput(BaseModel):
    value: Optional[List[str]] = None
    modifier: CriterionModifier
    depth: Optional[int] = None
    excludes: Optional[List[str]] = None


class IdentifyFieldOptionsInput(BaseModel):
    field: str
    strategy: IdentifyFieldStrategy
    createMissing: Optional[bool] = None


class IdentifyMetadataInput(BaseModel):
    sources: List["IdentifySourceInput"]
    options: Optional["IdentifyMetadataOptionsInput"] = None
    sceneIDs: Optional[List[str]] = None
    paths: Optional[List[str]] = None


class IdentifyMetadataOptionsInput(BaseModel):
    fieldOptions: Optional[List["IdentifyFieldOptionsInput"]] = None
    setCoverImage: Optional[bool] = None
    setOrganized: Optional[bool] = None
    includeMalePerformers: Optional[bool] = None
    skipMultipleMatches: Optional[bool] = None
    skipMultipleMatchTag: Optional[str] = None
    skipSingleNamePerformers: Optional[bool] = None
    skipSingleNamePerformerTag: Optional[str] = None


class IdentifySourceInput(BaseModel):
    source: "ScraperSourceInput"
    options: Optional["IdentifyMetadataOptionsInput"] = None


class ImageDestroyInput(BaseModel):
    id: str
    delete_file: Optional[bool] = None
    delete_generated: Optional[bool] = None


class ImageFilterType(BaseModel):
    AND: Optional["ImageFilterType"] = None
    OR: Optional["ImageFilterType"] = None
    NOT: Optional["ImageFilterType"] = None
    title: Optional["StringCriterionInput"] = None
    details: Optional["StringCriterionInput"] = None
    id: Optional["IntCriterionInput"] = None
    checksum: Optional["StringCriterionInput"] = None
    path: Optional["StringCriterionInput"] = None
    file_count: Optional["IntCriterionInput"] = None
    rating100: Optional["IntCriterionInput"] = None
    date: Optional["DateCriterionInput"] = None
    url: Optional["StringCriterionInput"] = None
    organized: Optional[bool] = None
    o_counter: Optional["IntCriterionInput"] = None
    resolution: Optional["ResolutionCriterionInput"] = None
    orientation: Optional["OrientationCriterionInput"] = None
    is_missing: Optional[str] = None
    studios: Optional["HierarchicalMultiCriterionInput"] = None
    tags: Optional["HierarchicalMultiCriterionInput"] = None
    tag_count: Optional["IntCriterionInput"] = None
    performer_tags: Optional["HierarchicalMultiCriterionInput"] = None
    performers: Optional["MultiCriterionInput"] = None
    performer_count: Optional["IntCriterionInput"] = None
    performer_favorite: Optional[bool] = None
    performer_age: Optional["IntCriterionInput"] = None
    galleries: Optional["MultiCriterionInput"] = None
    created_at: Optional["TimestampCriterionInput"] = None
    updated_at: Optional["TimestampCriterionInput"] = None
    code: Optional["StringCriterionInput"] = None
    photographer: Optional["StringCriterionInput"] = None
    galleries_filter: Optional["GalleryFilterType"] = None
    performers_filter: Optional["PerformerFilterType"] = None
    studios_filter: Optional["StudioFilterType"] = None
    tags_filter: Optional["TagFilterType"] = None


class ImageUpdateInput(BaseModel):
    clientMutationId: Optional[str] = None
    id: str
    title: Optional[str] = None
    code: Optional[str] = None
    rating100: Optional[int] = None
    organized: Optional[bool] = None
    url: Optional[str] = None
    urls: Optional[List[str]] = None
    date: Optional[str] = None
    details: Optional[str] = None
    photographer: Optional[str] = None
    studio_id: Optional[str] = None
    performer_ids: Optional[List[str]] = None
    tag_ids: Optional[List[str]] = None
    gallery_ids: Optional[List[str]] = None
    primary_file_id: Optional[str] = None


class ImagesDestroyInput(BaseModel):
    ids: List[str]
    delete_file: Optional[bool] = None
    delete_generated: Optional[bool] = None


class ImportObjectsInput(BaseModel):
    file: Upload
    duplicateBehaviour: ImportDuplicateEnum
    missingRefBehaviour: ImportMissingRefEnum


class IntCriterionInput(BaseModel):
    value: int
    value2: Optional[int] = None
    modifier: CriterionModifier


class MigrateBlobsInput(BaseModel):
    deleteOld: Optional[bool] = None


class MigrateInput(BaseModel):
    backupPath: str


class MigrateSceneScreenshotsInput(BaseModel):
    deleteFiles: Optional[bool] = None
    overwriteExisting: Optional[bool] = None


class MoveFilesInput(BaseModel):
    ids: List[str]
    destination_folder: Optional[str] = None
    destination_folder_id: Optional[str] = None
    destination_basename: Optional[str] = None


class MovieCreateInput(BaseModel):
    name: str
    aliases: Optional[str] = None
    duration: Optional[int] = None
    date: Optional[str] = None
    rating100: Optional[int] = None
    studio_id: Optional[str] = None
    director: Optional[str] = None
    synopsis: Optional[str] = None
    url: Optional[str] = None
    urls: Optional[List[str]] = None
    tag_ids: Optional[List[str]] = None
    front_image: Optional[str] = None
    back_image: Optional[str] = None


class MovieDestroyInput(BaseModel):
    id: str


class MovieFilterType(BaseModel):
    AND: Optional["MovieFilterType"] = None
    OR: Optional["MovieFilterType"] = None
    NOT: Optional["MovieFilterType"] = None
    name: Optional["StringCriterionInput"] = None
    director: Optional["StringCriterionInput"] = None
    synopsis: Optional["StringCriterionInput"] = None
    duration: Optional["IntCriterionInput"] = None
    rating100: Optional["IntCriterionInput"] = None
    studios: Optional["HierarchicalMultiCriterionInput"] = None
    is_missing: Optional[str] = None
    url: Optional["StringCriterionInput"] = None
    performers: Optional["MultiCriterionInput"] = None
    tags: Optional["HierarchicalMultiCriterionInput"] = None
    tag_count: Optional["IntCriterionInput"] = None
    date: Optional["DateCriterionInput"] = None
    created_at: Optional["TimestampCriterionInput"] = None
    updated_at: Optional["TimestampCriterionInput"] = None
    scenes_filter: Optional["SceneFilterType"] = None
    studios_filter: Optional["StudioFilterType"] = None


class MovieUpdateInput(BaseModel):
    id: str
    name: Optional[str] = None
    aliases: Optional[str] = None
    duration: Optional[int] = None
    date: Optional[str] = None
    rating100: Optional[int] = None
    studio_id: Optional[str] = None
    director: Optional[str] = None
    synopsis: Optional[str] = None
    url: Optional[str] = None
    urls: Optional[List[str]] = None
    tag_ids: Optional[List[str]] = None
    front_image: Optional[str] = None
    back_image: Optional[str] = None


class MultiCriterionInput(BaseModel):
    value: Optional[List[str]] = None
    modifier: CriterionModifier
    excludes: Optional[List[str]] = None


class OrientationCriterionInput(BaseModel):
    value: List[OrientationEnum]


class PHashDuplicationCriterionInput(BaseModel):
    duplicated: Optional[bool] = None
    distance: Optional[int] = None


class PackageSourceInput(BaseModel):
    name: Optional[str] = None
    url: str
    local_path: Optional[str] = None


class PackageSpecInput(BaseModel):
    id: str
    sourceURL: str


class PerformerCreateInput(BaseModel):
    name: str
    disambiguation: Optional[str] = None
    url: Optional[str] = None
    urls: Optional[List[str]] = None
    gender: Optional[GenderEnum] = None
    birthdate: Optional[str] = None
    ethnicity: Optional[str] = None
    country: Optional[str] = None
    eye_color: Optional[str] = None
    height_cm: Optional[int] = None
    measurements: Optional[str] = None
    fake_tits: Optional[str] = None
    penis_length: Optional[float] = None
    circumcised: Optional[CircumisedEnum] = None
    career_length: Optional[str] = None
    tattoos: Optional[str] = None
    piercings: Optional[str] = None
    alias_list: Optional[List[str]] = None
    twitter: Optional[str] = None
    instagram: Optional[str] = None
    favorite: Optional[bool] = None
    tag_ids: Optional[List[str]] = None
    image: Optional[str] = None
    stash_ids: Optional[List["StashIDInput"]] = None
    rating100: Optional[int] = None
    details: Optional[str] = None
    death_date: Optional[str] = None
    hair_color: Optional[str] = None
    weight: Optional[int] = None
    ignore_auto_tag: Optional[bool] = None
    custom_fields: Optional[Any] = None


class PerformerDestroyInput(BaseModel):
    id: str


class PerformerFilterType(BaseModel):
    AND: Optional["PerformerFilterType"] = None
    OR: Optional["PerformerFilterType"] = None
    NOT: Optional["PerformerFilterType"] = None
    name: Optional["StringCriterionInput"] = None
    disambiguation: Optional["StringCriterionInput"] = None
    details: Optional["StringCriterionInput"] = None
    filter_favorites: Optional[bool] = None
    birth_year: Optional["IntCriterionInput"] = None
    age: Optional["IntCriterionInput"] = None
    ethnicity: Optional["StringCriterionInput"] = None
    country: Optional["StringCriterionInput"] = None
    eye_color: Optional["StringCriterionInput"] = None
    height_cm: Optional["IntCriterionInput"] = None
    measurements: Optional["StringCriterionInput"] = None
    fake_tits: Optional["StringCriterionInput"] = None
    penis_length: Optional["FloatCriterionInput"] = None
    circumcised: Optional["CircumcisionCriterionInput"] = None
    career_length: Optional["StringCriterionInput"] = None
    tattoos: Optional["StringCriterionInput"] = None
    piercings: Optional["StringCriterionInput"] = None
    aliases: Optional["StringCriterionInput"] = None
    gender: Optional["GenderCriterionInput"] = None
    is_missing: Optional[str] = None
    tags: Optional["HierarchicalMultiCriterionInput"] = None
    tag_count: Optional["IntCriterionInput"] = None
    scene_count: Optional["IntCriterionInput"] = None
    image_count: Optional["IntCriterionInput"] = None
    gallery_count: Optional["IntCriterionInput"] = None
    play_count: Optional["IntCriterionInput"] = None
    o_counter: Optional["IntCriterionInput"] = None
    stash_id_endpoint: Optional["StashIDCriterionInput"] = None
    rating100: Optional["IntCriterionInput"] = None
    url: Optional["StringCriterionInput"] = None
    hair_color: Optional["StringCriterionInput"] = None
    weight: Optional["IntCriterionInput"] = None
    death_year: Optional["IntCriterionInput"] = None
    studios: Optional["HierarchicalMultiCriterionInput"] = None
    performers: Optional["MultiCriterionInput"] = None
    ignore_auto_tag: Optional[bool] = None
    birthdate: Optional["DateCriterionInput"] = None
    death_date: Optional["DateCriterionInput"] = None
    scenes_filter: Optional["SceneFilterType"] = None
    images_filter: Optional["ImageFilterType"] = None
    galleries_filter: Optional["GalleryFilterType"] = None
    tags_filter: Optional["TagFilterType"] = None
    created_at: Optional["TimestampCriterionInput"] = None
    updated_at: Optional["TimestampCriterionInput"] = None
    custom_fields: Optional[List["CustomFieldCriterionInput"]] = None


class PerformerUpdateInput(BaseModel):
    id: str
    name: Optional[str] = None
    disambiguation: Optional[str] = None
    url: Optional[str] = None
    urls: Optional[List[str]] = None
    gender: Optional[GenderEnum] = None
    birthdate: Optional[str] = None
    ethnicity: Optional[str] = None
    country: Optional[str] = None
    eye_color: Optional[str] = None
    height_cm: Optional[int] = None
    measurements: Optional[str] = None
    fake_tits: Optional[str] = None
    penis_length: Optional[float] = None
    circumcised: Optional[CircumisedEnum] = None
    career_length: Optional[str] = None
    tattoos: Optional[str] = None
    piercings: Optional[str] = None
    alias_list: Optional[List[str]] = None
    twitter: Optional[str] = None
    instagram: Optional[str] = None
    favorite: Optional[bool] = None
    tag_ids: Optional[List[str]] = None
    image: Optional[str] = None
    stash_ids: Optional[List["StashIDInput"]] = None
    rating100: Optional[int] = None
    details: Optional[str] = None
    death_date: Optional[str] = None
    hair_color: Optional[str] = None
    weight: Optional[int] = None
    ignore_auto_tag: Optional[bool] = None
    custom_fields: Optional["CustomFieldsInput"] = None


class PhashDistanceCriterionInput(BaseModel):
    value: str
    modifier: CriterionModifier
    distance: Optional[int] = None


class PluginArgInput(BaseModel):
    key: str
    value: Optional["PluginValueInput"] = None


class PluginValueInput(BaseModel):
    str: Optional[str] = None
    i: Optional[int] = None
    b: Optional[bool] = None
    f: Optional[float] = None
    o: Optional[List["PluginArgInput"]] = None
    a: Optional[List["PluginValueInput"]] = None


class RemoveTempDLNAIPInput(BaseModel):
    address: str


class ReorderSubGroupsInput(BaseModel):
    group_id: str
    sub_group_ids: List[str]
    insert_at_id: str
    insert_after: Optional[bool] = None


class ResolutionCriterionInput(BaseModel):
    value: ResolutionEnum
    modifier: CriterionModifier


class SaveFilterInput(BaseModel):
    id: Optional[str] = None
    mode: FilterMode
    name: str
    find_filter: Optional["FindFilterType"] = None
    object_filter: Optional[Any] = None
    ui_options: Optional[Any] = None


class ScanMetaDataFilterInput(BaseModel):
    minModTime: Optional[Any] = None


class ScanMetadataInput(BaseModel):
    paths: Optional[List[str]] = None
    rescan: Optional[bool] = None
    scanGenerateCovers: Optional[bool] = None
    scanGeneratePreviews: Optional[bool] = None
    scanGenerateImagePreviews: Optional[bool] = None
    scanGenerateSprites: Optional[bool] = None
    scanGeneratePhashes: Optional[bool] = None
    scanGenerateThumbnails: Optional[bool] = None
    scanGenerateClipPreviews: Optional[bool] = None
    filter: Optional["ScanMetaDataFilterInput"] = None


class SceneCreateInput(BaseModel):
    title: Optional[str] = None
    code: Optional[str] = None
    details: Optional[str] = None
    director: Optional[str] = None
    url: Optional[str] = None
    urls: Optional[List[str]] = None
    date: Optional[str] = None
    rating100: Optional[int] = None
    organized: Optional[bool] = None
    studio_id: Optional[str] = None
    gallery_ids: Optional[List[str]] = None
    performer_ids: Optional[List[str]] = None
    groups: Optional[List["SceneGroupInput"]] = None
    movies: Optional[List["SceneMovieInput"]] = None
    tag_ids: Optional[List[str]] = None
    cover_image: Optional[str] = None
    stash_ids: Optional[List["StashIDInput"]] = None
    file_ids: Optional[List[str]] = None


class SceneDestroyInput(BaseModel):
    id: str
    delete_file: Optional[bool] = None
    delete_generated: Optional[bool] = None


class SceneFilterType(BaseModel):
    AND: Optional["SceneFilterType"] = None
    OR: Optional["SceneFilterType"] = None
    NOT: Optional["SceneFilterType"] = None
    id: Optional["IntCriterionInput"] = None
    title: Optional["StringCriterionInput"] = None
    code: Optional["StringCriterionInput"] = None
    details: Optional["StringCriterionInput"] = None
    director: Optional["StringCriterionInput"] = None
    oshash: Optional["StringCriterionInput"] = None
    checksum: Optional["StringCriterionInput"] = None
    phash: Optional["StringCriterionInput"] = None
    phash_distance: Optional["PhashDistanceCriterionInput"] = None
    path: Optional["StringCriterionInput"] = None
    file_count: Optional["IntCriterionInput"] = None
    rating100: Optional["IntCriterionInput"] = None
    organized: Optional[bool] = None
    o_counter: Optional["IntCriterionInput"] = None
    duplicated: Optional["PHashDuplicationCriterionInput"] = None
    resolution: Optional["ResolutionCriterionInput"] = None
    orientation: Optional["OrientationCriterionInput"] = None
    framerate: Optional["IntCriterionInput"] = None
    bitrate: Optional["IntCriterionInput"] = None
    video_codec: Optional["StringCriterionInput"] = None
    audio_codec: Optional["StringCriterionInput"] = None
    duration: Optional["IntCriterionInput"] = None
    has_markers: Optional[str] = None
    is_missing: Optional[str] = None
    studios: Optional["HierarchicalMultiCriterionInput"] = None
    movies: Optional["MultiCriterionInput"] = None
    groups: Optional["HierarchicalMultiCriterionInput"] = None
    galleries: Optional["MultiCriterionInput"] = None
    tags: Optional["HierarchicalMultiCriterionInput"] = None
    tag_count: Optional["IntCriterionInput"] = None
    performer_tags: Optional["HierarchicalMultiCriterionInput"] = None
    performer_favorite: Optional[bool] = None
    performer_age: Optional["IntCriterionInput"] = None
    performers: Optional["MultiCriterionInput"] = None
    performer_count: Optional["IntCriterionInput"] = None
    stash_id_endpoint: Optional["StashIDCriterionInput"] = None
    url: Optional["StringCriterionInput"] = None
    interactive: Optional[bool] = None
    interactive_speed: Optional["IntCriterionInput"] = None
    captions: Optional["StringCriterionInput"] = None
    resume_time: Optional["IntCriterionInput"] = None
    play_count: Optional["IntCriterionInput"] = None
    play_duration: Optional["IntCriterionInput"] = None
    last_played_at: Optional["TimestampCriterionInput"] = None
    date: Optional["DateCriterionInput"] = None
    created_at: Optional["TimestampCriterionInput"] = None
    updated_at: Optional["TimestampCriterionInput"] = None
    galleries_filter: Optional["GalleryFilterType"] = None
    performers_filter: Optional["PerformerFilterType"] = None
    studios_filter: Optional["StudioFilterType"] = None
    tags_filter: Optional["TagFilterType"] = None
    movies_filter: Optional["MovieFilterType"] = None
    groups_filter: Optional["GroupFilterType"] = None
    markers_filter: Optional["SceneMarkerFilterType"] = None


class SceneGroupInput(BaseModel):
    group_id: str
    scene_index: Optional[int] = None


class SceneHashInput(BaseModel):
    checksum: Optional[str] = None
    oshash: Optional[str] = None


class SceneMarkerCreateInput(BaseModel):
    title: str
    seconds: float
    end_seconds: Optional[float] = None
    scene_id: str
    primary_tag_id: str
    tag_ids: Optional[List[str]] = None


class SceneMarkerFilterType(BaseModel):
    tags: Optional["HierarchicalMultiCriterionInput"] = None
    scene_tags: Optional["HierarchicalMultiCriterionInput"] = None
    performers: Optional["MultiCriterionInput"] = None
    scenes: Optional["MultiCriterionInput"] = None
    duration: Optional["FloatCriterionInput"] = None
    created_at: Optional["TimestampCriterionInput"] = None
    updated_at: Optional["TimestampCriterionInput"] = None
    scene_date: Optional["DateCriterionInput"] = None
    scene_created_at: Optional["TimestampCriterionInput"] = None
    scene_updated_at: Optional["TimestampCriterionInput"] = None
    scene_filter: Optional["SceneFilterType"] = None


class SceneMarkerUpdateInput(BaseModel):
    id: str
    title: Optional[str] = None
    seconds: Optional[float] = None
    end_seconds: Optional[float] = None
    scene_id: Optional[str] = None
    primary_tag_id: Optional[str] = None
    tag_ids: Optional[List[str]] = None


class SceneMergeInput(BaseModel):
    source: List[str]
    destination: str
    values: Optional["SceneUpdateInput"] = None
    play_history: Optional[bool] = None
    o_history: Optional[bool] = None


class SceneMovieInput(BaseModel):
    movie_id: str
    scene_index: Optional[int] = None


class SceneParserInput(BaseModel):
    ignoreWords: Optional[List[str]] = None
    whitespaceCharacters: Optional[str] = None
    capitalizeTitle: Optional[bool] = None
    ignoreOrganized: Optional[bool] = None


class SceneUpdateInput(BaseModel):
    clientMutationId: Optional[str] = None
    id: str
    title: Optional[str] = None
    code: Optional[str] = None
    details: Optional[str] = None
    director: Optional[str] = None
    url: Optional[str] = None
    urls: Optional[List[str]] = None
    date: Optional[str] = None
    rating100: Optional[int] = None
    o_counter: Optional[int] = None
    organized: Optional[bool] = None
    studio_id: Optional[str] = None
    gallery_ids: Optional[List[str]] = None
    performer_ids: Optional[List[str]] = None
    groups: Optional[List["SceneGroupInput"]] = None
    movies: Optional[List["SceneMovieInput"]] = None
    tag_ids: Optional[List[str]] = None
    cover_image: Optional[str] = None
    stash_ids: Optional[List["StashIDInput"]] = None
    resume_time: Optional[float] = None
    play_duration: Optional[float] = None
    play_count: Optional[int] = None
    primary_file_id: Optional[str] = None


class ScenesDestroyInput(BaseModel):
    ids: List[str]
    delete_file: Optional[bool] = None
    delete_generated: Optional[bool] = None


class ScrapeMultiPerformersInput(BaseModel):
    performer_ids: Optional[List[str]] = None


class ScrapeMultiScenesInput(BaseModel):
    scene_ids: Optional[List[str]] = None


class ScrapeSingleGalleryInput(BaseModel):
    query: Optional[str] = None
    gallery_id: Optional[str] = None
    gallery_input: Optional["ScrapedGalleryInput"] = None


class ScrapeSingleGroupInput(BaseModel):
    query: Optional[str] = None
    group_id: Optional[str] = None
    group_input: Optional["ScrapedGroupInput"] = None


class ScrapeSingleImageInput(BaseModel):
    query: Optional[str] = None
    image_id: Optional[str] = None
    image_input: Optional["ScrapedImageInput"] = None


class ScrapeSingleMovieInput(BaseModel):
    query: Optional[str] = None
    movie_id: Optional[str] = None
    movie_input: Optional["ScrapedMovieInput"] = None


class ScrapeSinglePerformerInput(BaseModel):
    query: Optional[str] = None
    performer_id: Optional[str] = None
    performer_input: Optional["ScrapedPerformerInput"] = None


class ScrapeSingleSceneInput(BaseModel):
    query: Optional[str] = None
    scene_id: Optional[str] = None
    scene_input: Optional["ScrapedSceneInput"] = None


class ScrapeSingleStudioInput(BaseModel):
    query: Optional[str] = None


class ScrapedGalleryInput(BaseModel):
    title: Optional[str] = None
    code: Optional[str] = None
    details: Optional[str] = None
    photographer: Optional[str] = None
    url: Optional[str] = None
    urls: Optional[List[str]] = None
    date: Optional[str] = None


class ScrapedGroupInput(BaseModel):
    name: Optional[str] = None
    aliases: Optional[str] = None
    duration: Optional[str] = None
    date: Optional[str] = None
    rating: Optional[str] = None
    director: Optional[str] = None
    urls: Optional[List[str]] = None
    synopsis: Optional[str] = None


class ScrapedImageInput(BaseModel):
    title: Optional[str] = None
    code: Optional[str] = None
    details: Optional[str] = None
    urls: Optional[List[str]] = None
    date: Optional[str] = None


class ScrapedMovieInput(BaseModel):
    name: Optional[str] = None
    aliases: Optional[str] = None
    duration: Optional[str] = None
    date: Optional[str] = None
    rating: Optional[str] = None
    director: Optional[str] = None
    url: Optional[str] = None
    urls: Optional[List[str]] = None
    synopsis: Optional[str] = None


class ScrapedPerformerInput(BaseModel):
    stored_id: Optional[str] = None
    name: Optional[str] = None
    disambiguation: Optional[str] = None
    gender: Optional[str] = None
    url: Optional[str] = None
    urls: Optional[List[str]] = None
    twitter: Optional[str] = None
    instagram: Optional[str] = None
    birthdate: Optional[str] = None
    ethnicity: Optional[str] = None
    country: Optional[str] = None
    eye_color: Optional[str] = None
    height: Optional[str] = None
    measurements: Optional[str] = None
    fake_tits: Optional[str] = None
    penis_length: Optional[str] = None
    circumcised: Optional[str] = None
    career_length: Optional[str] = None
    tattoos: Optional[str] = None
    piercings: Optional[str] = None
    aliases: Optional[str] = None
    details: Optional[str] = None
    death_date: Optional[str] = None
    hair_color: Optional[str] = None
    weight: Optional[str] = None
    remote_site_id: Optional[str] = None


class ScrapedSceneInput(BaseModel):
    title: Optional[str] = None
    code: Optional[str] = None
    details: Optional[str] = None
    director: Optional[str] = None
    url: Optional[str] = None
    urls: Optional[List[str]] = None
    date: Optional[str] = None
    remote_site_id: Optional[str] = None


class ScraperSourceInput(BaseModel):
    stash_box_index: Optional[int] = None
    stash_box_endpoint: Optional[str] = None
    scraper_id: Optional[str] = None


class SetDefaultFilterInput(BaseModel):
    mode: FilterMode
    find_filter: Optional["FindFilterType"] = None
    object_filter: Optional[Any] = None
    ui_options: Optional[Any] = None


class SetFingerprintsInput(BaseModel):
    type: str
    value: Optional[str] = None


class SetupInput(BaseModel):
    configLocation: str
    stashes: List["StashConfigInput"]
    databaseFile: str
    generatedLocation: str
    cacheLocation: str
    storeBlobsInDatabase: bool
    blobsLocation: str


class StashBoxBatchTagInput(BaseModel):
    endpoint: Optional[int] = None
    stash_box_endpoint: Optional[str] = None
    exclude_fields: Optional[List[str]] = None
    refresh: bool
    createParent: bool
    ids: Optional[List[str]] = None
    names: Optional[List[str]] = None
    performer_ids: Optional[List[str]] = None
    performer_names: Optional[List[str]] = None


class StashBoxDraftSubmissionInput(BaseModel):
    id: str
    stash_box_index: Optional[int] = None
    stash_box_endpoint: Optional[str] = None


class StashBoxFingerprintSubmissionInput(BaseModel):
    scene_ids: List[str]
    stash_box_index: Optional[int] = None
    stash_box_endpoint: Optional[str] = None


class StashBoxInput(BaseModel):
    endpoint: str
    api_key: str
    name: str


class StashBoxPerformerQueryInput(BaseModel):
    stash_box_index: Optional[int] = None
    stash_box_endpoint: Optional[str] = None
    performer_ids: Optional[List[str]] = None
    q: Optional[str] = None


class StashBoxSceneQueryInput(BaseModel):
    stash_box_index: Optional[int] = None
    stash_box_endpoint: Optional[str] = None
    scene_ids: Optional[List[str]] = None
    q: Optional[str] = None


class StashConfigInput(BaseModel):
    path: str
    excludeVideo: bool
    excludeImage: bool


class StashIDCriterionInput(BaseModel):
    endpoint: Optional[str] = None
    stash_id: Optional[str] = None
    modifier: CriterionModifier


class StashIDInput(BaseModel):
    endpoint: str
    stash_id: str
    updated_at: Optional[Any] = None


class StringCriterionInput(BaseModel):
    value: str
    modifier: CriterionModifier


class StudioCreateInput(BaseModel):
    name: str
    url: Optional[str] = None
    parent_id: Optional[str] = None
    image: Optional[str] = None
    stash_ids: Optional[List["StashIDInput"]] = None
    rating100: Optional[int] = None
    favorite: Optional[bool] = None
    details: Optional[str] = None
    aliases: Optional[List[str]] = None
    tag_ids: Optional[List[str]] = None
    ignore_auto_tag: Optional[bool] = None


class StudioDestroyInput(BaseModel):
    id: str


class StudioFilterType(BaseModel):
    AND: Optional["StudioFilterType"] = None
    OR: Optional["StudioFilterType"] = None
    NOT: Optional["StudioFilterType"] = None
    name: Optional["StringCriterionInput"] = None
    details: Optional["StringCriterionInput"] = None
    parents: Optional["MultiCriterionInput"] = None
    stash_id_endpoint: Optional["StashIDCriterionInput"] = None
    tags: Optional["HierarchicalMultiCriterionInput"] = None
    is_missing: Optional[str] = None
    rating100: Optional["IntCriterionInput"] = None
    favorite: Optional[bool] = None
    scene_count: Optional["IntCriterionInput"] = None
    image_count: Optional["IntCriterionInput"] = None
    gallery_count: Optional["IntCriterionInput"] = None
    tag_count: Optional["IntCriterionInput"] = None
    url: Optional["StringCriterionInput"] = None
    aliases: Optional["StringCriterionInput"] = None
    child_count: Optional["IntCriterionInput"] = None
    ignore_auto_tag: Optional[bool] = None
    scenes_filter: Optional["SceneFilterType"] = None
    images_filter: Optional["ImageFilterType"] = None
    galleries_filter: Optional["GalleryFilterType"] = None
    created_at: Optional["TimestampCriterionInput"] = None
    updated_at: Optional["TimestampCriterionInput"] = None


class StudioUpdateInput(BaseModel):
    id: str
    name: Optional[str] = None
    url: Optional[str] = None
    parent_id: Optional[str] = None
    image: Optional[str] = None
    stash_ids: Optional[List["StashIDInput"]] = None
    rating100: Optional[int] = None
    favorite: Optional[bool] = None
    details: Optional[str] = None
    aliases: Optional[List[str]] = None
    tag_ids: Optional[List[str]] = None
    ignore_auto_tag: Optional[bool] = None


class TagCreateInput(BaseModel):
    name: str
    sort_name: Optional[str] = None
    description: Optional[str] = None
    aliases: Optional[List[str]] = None
    ignore_auto_tag: Optional[bool] = None
    favorite: Optional[bool] = None
    image: Optional[str] = None
    parent_ids: Optional[List[str]] = None
    child_ids: Optional[List[str]] = None


class TagDestroyInput(BaseModel):
    id: str


class TagFilterType(BaseModel):
    AND: Optional["TagFilterType"] = None
    OR: Optional["TagFilterType"] = None
    NOT: Optional["TagFilterType"] = None
    name: Optional["StringCriterionInput"] = None
    sort_name: Optional["StringCriterionInput"] = None
    aliases: Optional["StringCriterionInput"] = None
    favorite: Optional[bool] = None
    description: Optional["StringCriterionInput"] = None
    is_missing: Optional[str] = None
    scene_count: Optional["IntCriterionInput"] = None
    image_count: Optional["IntCriterionInput"] = None
    gallery_count: Optional["IntCriterionInput"] = None
    performer_count: Optional["IntCriterionInput"] = None
    studio_count: Optional["IntCriterionInput"] = None
    movie_count: Optional["IntCriterionInput"] = None
    group_count: Optional["IntCriterionInput"] = None
    marker_count: Optional["IntCriterionInput"] = None
    parents: Optional["HierarchicalMultiCriterionInput"] = None
    children: Optional["HierarchicalMultiCriterionInput"] = None
    parent_count: Optional["IntCriterionInput"] = None
    child_count: Optional["IntCriterionInput"] = None
    ignore_auto_tag: Optional[bool] = None
    scenes_filter: Optional["SceneFilterType"] = None
    images_filter: Optional["ImageFilterType"] = None
    galleries_filter: Optional["GalleryFilterType"] = None
    created_at: Optional["TimestampCriterionInput"] = None
    updated_at: Optional["TimestampCriterionInput"] = None


class TagUpdateInput(BaseModel):
    id: str
    name: Optional[str] = None
    sort_name: Optional[str] = None
    description: Optional[str] = None
    aliases: Optional[List[str]] = None
    ignore_auto_tag: Optional[bool] = None
    favorite: Optional[bool] = None
    image: Optional[str] = None
    parent_ids: Optional[List[str]] = None
    child_ids: Optional[List[str]] = None


class TagsMergeInput(BaseModel):
    source: List[str]
    destination: str


class TimestampCriterionInput(BaseModel):
    value: str
    value2: Optional[str] = None
    modifier: CriterionModifier


BulkGalleryUpdateInput.model_rebuild()
BulkGroupUpdateInput.model_rebuild()
BulkImageUpdateInput.model_rebuild()
BulkMovieUpdateInput.model_rebuild()
BulkPerformerUpdateInput.model_rebuild()
BulkSceneUpdateInput.model_rebuild()
BulkTagUpdateInput.model_rebuild()
BulkUpdateGroupDescriptionsInput.model_rebuild()
ConfigDefaultSettingsInput.model_rebuild()
ConfigGeneralInput.model_rebuild()
ConfigInterfaceInput.model_rebuild()
ExportObjectsInput.model_rebuild()
FileSetFingerprintsInput.model_rebuild()
GalleryFilterType.model_rebuild()
GenerateMetadataInput.model_rebuild()
GroupCreateInput.model_rebuild()
GroupFilterType.model_rebuild()
GroupSubGroupAddInput.model_rebuild()
GroupUpdateInput.model_rebuild()
IdentifyMetadataInput.model_rebuild()
IdentifyMetadataOptionsInput.model_rebuild()
IdentifySourceInput.model_rebuild()
ImageFilterType.model_rebuild()
MovieFilterType.model_rebuild()
PerformerCreateInput.model_rebuild()
PerformerFilterType.model_rebuild()
PerformerUpdateInput.model_rebuild()
PluginArgInput.model_rebuild()
PluginValueInput.model_rebuild()
SaveFilterInput.model_rebuild()
ScanMetadataInput.model_rebuild()
SceneCreateInput.model_rebuild()
SceneFilterType.model_rebuild()
SceneMarkerFilterType.model_rebuild()
SceneMergeInput.model_rebuild()
SceneUpdateInput.model_rebuild()
ScrapeSingleGalleryInput.model_rebuild()
ScrapeSingleGroupInput.model_rebuild()
ScrapeSingleImageInput.model_rebuild()
ScrapeSingleMovieInput.model_rebuild()
ScrapeSinglePerformerInput.model_rebuild()
ScrapeSingleSceneInput.model_rebuild()
SetDefaultFilterInput.model_rebuild()
SetupInput.model_rebuild()
StudioCreateInput.model_rebuild()
StudioFilterType.model_rebuild()
StudioUpdateInput.model_rebuild()
TagFilterType.model_rebuild()
